// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version"

// DATE "11/15/2024 15:41:22"

// 
// Device: Altera EPM570T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for ModelSim (Verilog) only
// 

`timescale 1 ps/ 1 ps

module MCUbus (
	clk,
	rst_n,
	DB,
	ALE,
	WR,
	RD);
input 	clk;
input 	rst_n;
inout 	[7:0] DB;
input 	ALE;
input 	WR;
input 	RD;

// Design Ports Information
// clk	=>  Location: PIN_12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// ALE	=>  Location: PIN_71,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// RD	=>  Location: PIN_64,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// rst_n	=>  Location: PIN_14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// WR	=>  Location: PIN_76,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// DB[0]	=>  Location: PIN_74,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// DB[1]	=>  Location: PIN_82,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// DB[2]	=>  Location: PIN_70,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// DB[3]	=>  Location: PIN_69,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// DB[4]	=>  Location: PIN_81,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// DB[5]	=>  Location: PIN_75,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// DB[6]	=>  Location: PIN_72,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// DB[7]	=>  Location: PIN_73,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("MCUbus_v.sdo");
// synopsys translate_on

wire \data_regs[1][0]~regout ;
wire \data_regs[2][0]~regout ;
wire \data_regs[2][1]~regout ;
wire \data_regs[1][1]~regout ;
wire \data_regs[1][2]~regout ;
wire \data_regs[2][2]~regout ;
wire \data_regs[2][3]~regout ;
wire \data_regs[1][3]~regout ;
wire \data_regs[1][4]~regout ;
wire \data_regs[2][4]~regout ;
wire \data_regs[2][5]~regout ;
wire \data_regs[1][5]~regout ;
wire \data_regs[1][6]~regout ;
wire \data_regs[2][6]~regout ;
wire \data_regs[2][7]~regout ;
wire \data_regs[1][7]~regout ;
wire \DB[0]~0 ;
wire \DB[1]~1 ;
wire \DB[2]~2 ;
wire \DB[3]~3 ;
wire \DB[4]~4 ;
wire \DB[5]~5 ;
wire \DB[6]~6 ;
wire \DB[7]~7 ;
wire \clk~combout ;
wire \ALE~combout ;
wire \rst_n~combout ;
wire \Decoder0~1 ;
wire \WR~combout ;
wire \Decoder0~0 ;
wire \Decoder0~2 ;
wire \Decoder0~3 ;
wire \data_regs[4][0]~regout ;
wire \Decoder0~7_combout ;
wire \data_regs[3][0]~regout ;
wire \Decoder0~6_combout ;
wire \data_regs[0][0]~regout ;
wire \Decoder0~5 ;
wire \Mux7~0 ;
wire \Decoder0~4_combout ;
wire \Mux7~1 ;
wire \RD~combout ;
wire \DB_tristate~regout ;
wire \DB_tristate~0 ;
wire \data_out[0]~en_regout ;
wire \data_out[0]~8_combout ;
wire \data_regs[4][1]~regout ;
wire \data_regs[3][1]~regout ;
wire \data_regs[0][1]~regout ;
wire \Mux6~0 ;
wire \Mux6~1 ;
wire \data_regs[4][2]~regout ;
wire \data_regs[3][2]~regout ;
wire \data_regs[0][2]~regout ;
wire \Mux5~0 ;
wire \Mux5~1 ;
wire \data_regs[4][3]~regout ;
wire \data_regs[3][3]~regout ;
wire \data_regs[0][3]~regout ;
wire \Mux4~0 ;
wire \Mux4~1 ;
wire \data_regs[4][4]~regout ;
wire \data_regs[3][4]~regout ;
wire \data_regs[0][4]~regout ;
wire \Mux3~0 ;
wire \Mux3~1 ;
wire \data_regs[4][5]~regout ;
wire \data_regs[3][5]~regout ;
wire \data_regs[0][5]~regout ;
wire \Mux2~0 ;
wire \Mux2~1 ;
wire \data_regs[3][6]~regout ;
wire \data_regs[0][6]~regout ;
wire \Mux1~0 ;
wire \Mux1~1 ;
wire \data_regs[4][6]~regout ;
wire \data_regs[4][7]~regout ;
wire \data_regs[3][7]~regout ;
wire \data_regs[0][7]~regout ;
wire \Mux0~0 ;
wire \Mux0~1 ;
wire [7:0] data_out;
wire [7:0] address_latch;


// Location: PIN_74,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \DB[0]~I (
	.datain(data_out[0]),
	.oe(\data_out[0]~8_combout ),
	.combout(\DB[0]~0 ),
	.padio(DB[0]));
// synopsys translate_off
defparam \DB[0]~I .operation_mode = "bidir";
// synopsys translate_on

// Location: PIN_82,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \DB[1]~I (
	.datain(data_out[1]),
	.oe(\data_out[0]~8_combout ),
	.combout(\DB[1]~1 ),
	.padio(DB[1]));
// synopsys translate_off
defparam \DB[1]~I .operation_mode = "bidir";
// synopsys translate_on

// Location: PIN_70,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \DB[2]~I (
	.datain(data_out[2]),
	.oe(\data_out[0]~8_combout ),
	.combout(\DB[2]~2 ),
	.padio(DB[2]));
// synopsys translate_off
defparam \DB[2]~I .operation_mode = "bidir";
// synopsys translate_on

// Location: PIN_69,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \DB[3]~I (
	.datain(data_out[3]),
	.oe(\data_out[0]~8_combout ),
	.combout(\DB[3]~3 ),
	.padio(DB[3]));
// synopsys translate_off
defparam \DB[3]~I .operation_mode = "bidir";
// synopsys translate_on

// Location: PIN_81,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \DB[4]~I (
	.datain(data_out[4]),
	.oe(\data_out[0]~8_combout ),
	.combout(\DB[4]~4 ),
	.padio(DB[4]));
// synopsys translate_off
defparam \DB[4]~I .operation_mode = "bidir";
// synopsys translate_on

// Location: PIN_75,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \DB[5]~I (
	.datain(data_out[5]),
	.oe(\data_out[0]~8_combout ),
	.combout(\DB[5]~5 ),
	.padio(DB[5]));
// synopsys translate_off
defparam \DB[5]~I .operation_mode = "bidir";
// synopsys translate_on

// Location: PIN_72,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \DB[6]~I (
	.datain(data_out[6]),
	.oe(\data_out[0]~8_combout ),
	.combout(\DB[6]~6 ),
	.padio(DB[6]));
// synopsys translate_off
defparam \DB[6]~I .operation_mode = "bidir";
// synopsys translate_on

// Location: PIN_73,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \DB[7]~I (
	.datain(data_out[7]),
	.oe(\data_out[0]~8_combout ),
	.combout(\DB[7]~7 ),
	.padio(DB[7]));
// synopsys translate_off
defparam \DB[7]~I .operation_mode = "bidir";
// synopsys translate_on

// Location: PIN_12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_71,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \ALE~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\ALE~combout ),
	.padio(ALE));
// synopsys translate_off
defparam \ALE~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \rst_n~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\rst_n~combout ),
	.padio(rst_n));
// synopsys translate_off
defparam \rst_n~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X11_Y6_N5
maxii_lcell \address_latch[1] (
// Equation(s):
// \Decoder0~1  = (\ALE~combout  & (((!address_latch[0] & !address_latch[1])) # (!address_latch[2])))
// address_latch[1] = DFFEAS(\Decoder0~1 , GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , !\ALE~combout , \DB[1]~1 , , , VCC)

	.clk(\clk~combout ),
	.dataa(\ALE~combout ),
	.datab(address_latch[0]),
	.datac(\DB[1]~1 ),
	.datad(address_latch[2]),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(!\ALE~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder0~1 ),
	.regout(address_latch[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \address_latch[1] .lut_mask = "02aa";
defparam \address_latch[1] .operation_mode = "normal";
defparam \address_latch[1] .output_mode = "reg_and_comb";
defparam \address_latch[1] .register_cascade_mode = "off";
defparam \address_latch[1] .sum_lutc_input = "qfbk";
defparam \address_latch[1] .synch_mode = "on";
// synopsys translate_on

// Location: PIN_76,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \WR~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\WR~combout ),
	.padio(WR));
// synopsys translate_off
defparam \WR~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X11_Y6_N6
maxii_lcell \address_latch[5] (
// Equation(s):
// address_latch[5] = DFFEAS(GND, GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , !\ALE~combout , \DB[5]~5 , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\DB[5]~5 ),
	.datad(vcc),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(!\ALE~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(address_latch[5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \address_latch[5] .lut_mask = "0000";
defparam \address_latch[5] .operation_mode = "normal";
defparam \address_latch[5] .output_mode = "reg_only";
defparam \address_latch[5] .register_cascade_mode = "off";
defparam \address_latch[5] .sum_lutc_input = "datac";
defparam \address_latch[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y6_N0
maxii_lcell \address_latch[7] (
// Equation(s):
// address_latch[7] = DFFEAS(GND, GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , !\ALE~combout , \DB[7]~7 , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\DB[7]~7 ),
	.datad(vcc),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(!\ALE~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(address_latch[7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \address_latch[7] .lut_mask = "0000";
defparam \address_latch[7] .operation_mode = "normal";
defparam \address_latch[7] .output_mode = "reg_only";
defparam \address_latch[7] .register_cascade_mode = "off";
defparam \address_latch[7] .sum_lutc_input = "datac";
defparam \address_latch[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y6_N4
maxii_lcell \address_latch[4] (
// Equation(s):
// address_latch[4] = DFFEAS(GND, GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , !\ALE~combout , \DB[4]~4 , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\DB[4]~4 ),
	.datad(vcc),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(!\ALE~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(address_latch[4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \address_latch[4] .lut_mask = "0000";
defparam \address_latch[4] .operation_mode = "normal";
defparam \address_latch[4] .output_mode = "reg_only";
defparam \address_latch[4] .register_cascade_mode = "off";
defparam \address_latch[4] .sum_lutc_input = "datac";
defparam \address_latch[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y6_N8
maxii_lcell \address_latch[6] (
// Equation(s):
// \Decoder0~0  = (!address_latch[5] & (!address_latch[7] & (address_latch[6] & address_latch[4])))

	.clk(\clk~combout ),
	.dataa(address_latch[5]),
	.datab(address_latch[7]),
	.datac(\DB[6]~6 ),
	.datad(address_latch[4]),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(!\ALE~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder0~0 ),
	.regout(address_latch[6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \address_latch[6] .lut_mask = "1000";
defparam \address_latch[6] .operation_mode = "normal";
defparam \address_latch[6] .output_mode = "comb_only";
defparam \address_latch[6] .register_cascade_mode = "off";
defparam \address_latch[6] .sum_lutc_input = "qfbk";
defparam \address_latch[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y6_N9
maxii_lcell \address_latch[3] (
// Equation(s):
// \Decoder0~2  = (\Decoder0~1  & (!\WR~combout  & (!address_latch[3] & \Decoder0~0 )))
// address_latch[3] = DFFEAS(\Decoder0~2 , GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , !\ALE~combout , \DB[3]~3 , , , VCC)

	.clk(\clk~combout ),
	.dataa(\Decoder0~1 ),
	.datab(\WR~combout ),
	.datac(\DB[3]~3 ),
	.datad(\Decoder0~0 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(!\ALE~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder0~2 ),
	.regout(address_latch[3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \address_latch[3] .lut_mask = "0200";
defparam \address_latch[3] .operation_mode = "normal";
defparam \address_latch[3] .output_mode = "reg_and_comb";
defparam \address_latch[3] .register_cascade_mode = "off";
defparam \address_latch[3] .sum_lutc_input = "qfbk";
defparam \address_latch[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y6_N1
maxii_lcell \address_latch[0] (
// Equation(s):
// \Decoder0~5  = (!address_latch[1] & (!address_latch[2] & (address_latch[0] & \Decoder0~2 )))
// address_latch[0] = DFFEAS(\Decoder0~5 , GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , !\ALE~combout , \DB[0]~0 , , , VCC)

	.clk(\clk~combout ),
	.dataa(address_latch[1]),
	.datab(address_latch[2]),
	.datac(\DB[0]~0 ),
	.datad(\Decoder0~2 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(!\ALE~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder0~5 ),
	.regout(address_latch[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \address_latch[0] .lut_mask = "1000";
defparam \address_latch[0] .operation_mode = "normal";
defparam \address_latch[0] .output_mode = "reg_and_comb";
defparam \address_latch[0] .register_cascade_mode = "off";
defparam \address_latch[0] .sum_lutc_input = "qfbk";
defparam \address_latch[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y6_N3
maxii_lcell \address_latch[2] (
// Equation(s):
// \Decoder0~3  = (!address_latch[1] & (!address_latch[0] & (address_latch[2] & \Decoder0~2 )))
// address_latch[2] = DFFEAS(\Decoder0~3 , GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , !\ALE~combout , \DB[2]~2 , , , VCC)

	.clk(\clk~combout ),
	.dataa(address_latch[1]),
	.datab(address_latch[0]),
	.datac(\DB[2]~2 ),
	.datad(\Decoder0~2 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(!\ALE~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder0~3 ),
	.regout(address_latch[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \address_latch[2] .lut_mask = "1000";
defparam \address_latch[2] .operation_mode = "normal";
defparam \address_latch[2] .output_mode = "reg_and_comb";
defparam \address_latch[2] .register_cascade_mode = "off";
defparam \address_latch[2] .sum_lutc_input = "qfbk";
defparam \address_latch[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y6_N1
maxii_lcell \data_regs[4][0] (
// Equation(s):
// \data_regs[4][0]~regout  = DFFEAS(GND, GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~3 , \DB[0]~0 , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\DB[0]~0 ),
	.datad(vcc),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~3 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[4][0]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[4][0] .lut_mask = "0000";
defparam \data_regs[4][0] .operation_mode = "normal";
defparam \data_regs[4][0] .output_mode = "reg_only";
defparam \data_regs[4][0] .register_cascade_mode = "off";
defparam \data_regs[4][0] .sum_lutc_input = "datac";
defparam \data_regs[4][0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y7_N7
maxii_lcell \Decoder0~7 (
// Equation(s):
// \Decoder0~7_combout  = (address_latch[0] & (!address_latch[2] & (address_latch[1] & \Decoder0~2 )))

	.clk(gnd),
	.dataa(address_latch[0]),
	.datab(address_latch[2]),
	.datac(address_latch[1]),
	.datad(\Decoder0~2 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder0~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Decoder0~7 .lut_mask = "2000";
defparam \Decoder0~7 .operation_mode = "normal";
defparam \Decoder0~7 .output_mode = "comb_only";
defparam \Decoder0~7 .register_cascade_mode = "off";
defparam \Decoder0~7 .sum_lutc_input = "datac";
defparam \Decoder0~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y7_N9
maxii_lcell \data_regs[3][0] (
// Equation(s):
// \data_regs[3][0]~regout  = DFFEAS((((\DB[0]~0 ))), GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~7_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\DB[0]~0 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Decoder0~7_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[3][0]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[3][0] .lut_mask = "ff00";
defparam \data_regs[3][0] .operation_mode = "normal";
defparam \data_regs[3][0] .output_mode = "reg_only";
defparam \data_regs[3][0] .register_cascade_mode = "off";
defparam \data_regs[3][0] .sum_lutc_input = "datac";
defparam \data_regs[3][0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y6_N7
maxii_lcell \Decoder0~6 (
// Equation(s):
// \Decoder0~6_combout  = (!address_latch[1] & (!address_latch[2] & (!address_latch[0] & \Decoder0~2 )))

	.clk(gnd),
	.dataa(address_latch[1]),
	.datab(address_latch[2]),
	.datac(address_latch[0]),
	.datad(\Decoder0~2 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder0~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Decoder0~6 .lut_mask = "0100";
defparam \Decoder0~6 .operation_mode = "normal";
defparam \Decoder0~6 .output_mode = "comb_only";
defparam \Decoder0~6 .register_cascade_mode = "off";
defparam \Decoder0~6 .sum_lutc_input = "datac";
defparam \Decoder0~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y6_N1
maxii_lcell \data_regs[0][0] (
// Equation(s):
// \data_regs[0][0]~regout  = DFFEAS(GND, GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~6_combout , \DB[0]~0 , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\DB[0]~0 ),
	.datad(vcc),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[0][0]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[0][0] .lut_mask = "0000";
defparam \data_regs[0][0] .operation_mode = "normal";
defparam \data_regs[0][0] .output_mode = "reg_only";
defparam \data_regs[0][0] .register_cascade_mode = "off";
defparam \data_regs[0][0] .sum_lutc_input = "datac";
defparam \data_regs[0][0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X10_Y6_N3
maxii_lcell \data_regs[1][0] (
// Equation(s):
// \Mux7~0  = (address_latch[1] & (((address_latch[0])))) # (!address_latch[1] & ((address_latch[0] & ((data_regs[1][0]))) # (!address_latch[0] & (\data_regs[0][0]~regout ))))

	.clk(\clk~combout ),
	.dataa(\data_regs[0][0]~regout ),
	.datab(address_latch[1]),
	.datac(\DB[0]~0 ),
	.datad(address_latch[0]),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~5 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux7~0 ),
	.regout(\data_regs[1][0]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[1][0] .lut_mask = "fc22";
defparam \data_regs[1][0] .operation_mode = "normal";
defparam \data_regs[1][0] .output_mode = "comb_only";
defparam \data_regs[1][0] .register_cascade_mode = "off";
defparam \data_regs[1][0] .sum_lutc_input = "qfbk";
defparam \data_regs[1][0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y6_N2
maxii_lcell \Decoder0~4 (
// Equation(s):
// \Decoder0~4_combout  = (!address_latch[2] & (address_latch[1] & (!address_latch[0] & \Decoder0~2 )))

	.clk(gnd),
	.dataa(address_latch[2]),
	.datab(address_latch[1]),
	.datac(address_latch[0]),
	.datad(\Decoder0~2 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Decoder0~4 .lut_mask = "0400";
defparam \Decoder0~4 .operation_mode = "normal";
defparam \Decoder0~4 .output_mode = "comb_only";
defparam \Decoder0~4 .register_cascade_mode = "off";
defparam \Decoder0~4 .sum_lutc_input = "datac";
defparam \Decoder0~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N4
maxii_lcell \data_regs[2][0] (
// Equation(s):
// \Mux7~1  = (address_latch[1] & ((\Mux7~0  & (\data_regs[3][0]~regout )) # (!\Mux7~0  & ((data_regs[2][0]))))) # (!address_latch[1] & (((\Mux7~0 ))))

	.clk(\clk~combout ),
	.dataa(address_latch[1]),
	.datab(\data_regs[3][0]~regout ),
	.datac(\DB[0]~0 ),
	.datad(\Mux7~0 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~4_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux7~1 ),
	.regout(\data_regs[2][0]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[2][0] .lut_mask = "dda0";
defparam \data_regs[2][0] .operation_mode = "normal";
defparam \data_regs[2][0] .output_mode = "comb_only";
defparam \data_regs[2][0] .register_cascade_mode = "off";
defparam \data_regs[2][0] .sum_lutc_input = "qfbk";
defparam \data_regs[2][0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y6_N2
maxii_lcell \data_out[0] (
// Equation(s):
// data_out[0] = DFFEAS(((address_latch[2] & (\data_regs[4][0]~regout )) # (!address_latch[2] & ((\Mux7~1 )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(address_latch[2]),
	.datac(\data_regs[4][0]~regout ),
	.datad(\Mux7~1 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(data_out[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_out[0] .lut_mask = "f3c0";
defparam \data_out[0] .operation_mode = "normal";
defparam \data_out[0] .output_mode = "reg_only";
defparam \data_out[0] .register_cascade_mode = "off";
defparam \data_out[0] .sum_lutc_input = "datac";
defparam \data_out[0] .synch_mode = "off";
// synopsys translate_on

// Location: PIN_64,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \RD~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\RD~combout ),
	.padio(RD));
// synopsys translate_off
defparam \RD~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X10_Y5_N8
maxii_lcell DB_tristate(
// Equation(s):
// \DB_tristate~0  = (!\RD~combout  & (!address_latch[3] & (\Decoder0~0  & \Decoder0~1 )))
// \DB_tristate~regout  = DFFEAS(\DB_tristate~0 , GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(\RD~combout ),
	.datab(address_latch[3]),
	.datac(\Decoder0~0 ),
	.datad(\Decoder0~1 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\DB_tristate~0 ),
	.regout(\DB_tristate~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam DB_tristate.lut_mask = "1000";
defparam DB_tristate.operation_mode = "normal";
defparam DB_tristate.output_mode = "reg_and_comb";
defparam DB_tristate.register_cascade_mode = "off";
defparam DB_tristate.sum_lutc_input = "datac";
defparam DB_tristate.synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y5_N9
maxii_lcell \data_out[0]~en (
// Equation(s):
// \data_out[0]~en_regout  = DFFEAS((((!\DB_tristate~0 ))), GLOBAL(\clk~combout ), VCC, , , VCC, !GLOBAL(\rst_n~combout ), , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\DB_tristate~0 ),
	.aclr(gnd),
	.aload(!\rst_n~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_out[0]~en_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_out[0]~en .lut_mask = "00ff";
defparam \data_out[0]~en .operation_mode = "normal";
defparam \data_out[0]~en .output_mode = "reg_only";
defparam \data_out[0]~en .register_cascade_mode = "off";
defparam \data_out[0]~en .sum_lutc_input = "datac";
defparam \data_out[0]~en .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y5_N5
maxii_lcell \data_out[0]~8 (
// Equation(s):
// \data_out[0]~8_combout  = (\DB_tristate~regout  & (((!\data_out[0]~en_regout ))))

	.clk(gnd),
	.dataa(\DB_tristate~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\data_out[0]~en_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\data_out[0]~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_out[0]~8 .lut_mask = "00aa";
defparam \data_out[0]~8 .operation_mode = "normal";
defparam \data_out[0]~8 .output_mode = "comb_only";
defparam \data_out[0]~8 .register_cascade_mode = "off";
defparam \data_out[0]~8 .sum_lutc_input = "datac";
defparam \data_out[0]~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N8
maxii_lcell \data_regs[4][1] (
// Equation(s):
// \data_regs[4][1]~regout  = DFFEAS(GND, GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~3 , \DB[1]~1 , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\DB[1]~1 ),
	.datad(vcc),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~3 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[4][1]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[4][1] .lut_mask = "0000";
defparam \data_regs[4][1] .operation_mode = "normal";
defparam \data_regs[4][1] .output_mode = "reg_only";
defparam \data_regs[4][1] .register_cascade_mode = "off";
defparam \data_regs[4][1] .sum_lutc_input = "datac";
defparam \data_regs[4][1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y7_N6
maxii_lcell \data_regs[3][1] (
// Equation(s):
// \data_regs[3][1]~regout  = DFFEAS(GND, GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~7_combout , \DB[1]~1 , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\DB[1]~1 ),
	.datad(vcc),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~7_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[3][1]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[3][1] .lut_mask = "0000";
defparam \data_regs[3][1] .operation_mode = "normal";
defparam \data_regs[3][1] .output_mode = "reg_only";
defparam \data_regs[3][1] .register_cascade_mode = "off";
defparam \data_regs[3][1] .sum_lutc_input = "datac";
defparam \data_regs[3][1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y6_N9
maxii_lcell \data_regs[0][1] (
// Equation(s):
// \data_regs[0][1]~regout  = DFFEAS(GND, GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~6_combout , \DB[1]~1 , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\DB[1]~1 ),
	.datad(vcc),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[0][1]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[0][1] .lut_mask = "0000";
defparam \data_regs[0][1] .operation_mode = "normal";
defparam \data_regs[0][1] .output_mode = "reg_only";
defparam \data_regs[0][1] .register_cascade_mode = "off";
defparam \data_regs[0][1] .sum_lutc_input = "datac";
defparam \data_regs[0][1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X10_Y6_N2
maxii_lcell \data_regs[2][1] (
// Equation(s):
// \Mux6~0  = (address_latch[1] & (((data_regs[2][1]) # (address_latch[0])))) # (!address_latch[1] & (\data_regs[0][1]~regout  & ((!address_latch[0]))))

	.clk(\clk~combout ),
	.dataa(\data_regs[0][1]~regout ),
	.datab(address_latch[1]),
	.datac(\DB[1]~1 ),
	.datad(address_latch[0]),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~4_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux6~0 ),
	.regout(\data_regs[2][1]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[2][1] .lut_mask = "cce2";
defparam \data_regs[2][1] .operation_mode = "normal";
defparam \data_regs[2][1] .output_mode = "comb_only";
defparam \data_regs[2][1] .register_cascade_mode = "off";
defparam \data_regs[2][1] .sum_lutc_input = "qfbk";
defparam \data_regs[2][1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X10_Y6_N1
maxii_lcell \data_regs[1][1] (
// Equation(s):
// \Mux6~1  = (address_latch[0] & ((\Mux6~0  & (\data_regs[3][1]~regout )) # (!\Mux6~0  & ((data_regs[1][1]))))) # (!address_latch[0] & (((\Mux6~0 ))))

	.clk(\clk~combout ),
	.dataa(\data_regs[3][1]~regout ),
	.datab(address_latch[0]),
	.datac(\DB[1]~1 ),
	.datad(\Mux6~0 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~5 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux6~1 ),
	.regout(\data_regs[1][1]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[1][1] .lut_mask = "bbc0";
defparam \data_regs[1][1] .operation_mode = "normal";
defparam \data_regs[1][1] .output_mode = "comb_only";
defparam \data_regs[1][1] .register_cascade_mode = "off";
defparam \data_regs[1][1] .sum_lutc_input = "qfbk";
defparam \data_regs[1][1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y6_N6
maxii_lcell \data_out[1] (
// Equation(s):
// data_out[1] = DFFEAS(((address_latch[2] & (\data_regs[4][1]~regout )) # (!address_latch[2] & ((\Mux6~1 )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(address_latch[2]),
	.datac(\data_regs[4][1]~regout ),
	.datad(\Mux6~1 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(data_out[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_out[1] .lut_mask = "f3c0";
defparam \data_out[1] .operation_mode = "normal";
defparam \data_out[1] .output_mode = "reg_only";
defparam \data_out[1] .register_cascade_mode = "off";
defparam \data_out[1] .sum_lutc_input = "datac";
defparam \data_out[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N4
maxii_lcell \data_regs[4][2] (
// Equation(s):
// \data_regs[4][2]~regout  = DFFEAS((((\DB[2]~2 ))), GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~3 , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\DB[2]~2 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Decoder0~3 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[4][2]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[4][2] .lut_mask = "ff00";
defparam \data_regs[4][2] .operation_mode = "normal";
defparam \data_regs[4][2] .output_mode = "reg_only";
defparam \data_regs[4][2] .register_cascade_mode = "off";
defparam \data_regs[4][2] .sum_lutc_input = "datac";
defparam \data_regs[4][2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y7_N8
maxii_lcell \data_regs[3][2] (
// Equation(s):
// \data_regs[3][2]~regout  = DFFEAS(GND, GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~7_combout , \DB[2]~2 , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\DB[2]~2 ),
	.datad(vcc),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~7_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[3][2]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[3][2] .lut_mask = "0000";
defparam \data_regs[3][2] .operation_mode = "normal";
defparam \data_regs[3][2] .output_mode = "reg_only";
defparam \data_regs[3][2] .register_cascade_mode = "off";
defparam \data_regs[3][2] .sum_lutc_input = "datac";
defparam \data_regs[3][2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y6_N8
maxii_lcell \data_regs[0][2] (
// Equation(s):
// \data_regs[0][2]~regout  = DFFEAS(GND, GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~6_combout , \DB[2]~2 , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\DB[2]~2 ),
	.datad(vcc),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[0][2]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[0][2] .lut_mask = "0000";
defparam \data_regs[0][2] .operation_mode = "normal";
defparam \data_regs[0][2] .output_mode = "reg_only";
defparam \data_regs[0][2] .register_cascade_mode = "off";
defparam \data_regs[0][2] .sum_lutc_input = "datac";
defparam \data_regs[0][2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X10_Y6_N5
maxii_lcell \data_regs[1][2] (
// Equation(s):
// \Mux5~0  = (address_latch[1] & (((address_latch[0])))) # (!address_latch[1] & ((address_latch[0] & ((data_regs[1][2]))) # (!address_latch[0] & (\data_regs[0][2]~regout ))))

	.clk(\clk~combout ),
	.dataa(\data_regs[0][2]~regout ),
	.datab(address_latch[1]),
	.datac(\DB[2]~2 ),
	.datad(address_latch[0]),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~5 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux5~0 ),
	.regout(\data_regs[1][2]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[1][2] .lut_mask = "fc22";
defparam \data_regs[1][2] .operation_mode = "normal";
defparam \data_regs[1][2] .output_mode = "comb_only";
defparam \data_regs[1][2] .register_cascade_mode = "off";
defparam \data_regs[1][2] .sum_lutc_input = "qfbk";
defparam \data_regs[1][2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X10_Y6_N6
maxii_lcell \data_regs[2][2] (
// Equation(s):
// \Mux5~1  = (address_latch[1] & ((\Mux5~0  & (\data_regs[3][2]~regout )) # (!\Mux5~0  & ((data_regs[2][2]))))) # (!address_latch[1] & (((\Mux5~0 ))))

	.clk(\clk~combout ),
	.dataa(\data_regs[3][2]~regout ),
	.datab(address_latch[1]),
	.datac(\DB[2]~2 ),
	.datad(\Mux5~0 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~4_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux5~1 ),
	.regout(\data_regs[2][2]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[2][2] .lut_mask = "bbc0";
defparam \data_regs[2][2] .operation_mode = "normal";
defparam \data_regs[2][2] .output_mode = "comb_only";
defparam \data_regs[2][2] .register_cascade_mode = "off";
defparam \data_regs[2][2] .sum_lutc_input = "qfbk";
defparam \data_regs[2][2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y6_N3
maxii_lcell \data_out[2] (
// Equation(s):
// data_out[2] = DFFEAS(((address_latch[2] & (\data_regs[4][2]~regout )) # (!address_latch[2] & ((\Mux5~1 )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\data_regs[4][2]~regout ),
	.datac(\Mux5~1 ),
	.datad(address_latch[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(data_out[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_out[2] .lut_mask = "ccf0";
defparam \data_out[2] .operation_mode = "normal";
defparam \data_out[2] .output_mode = "reg_only";
defparam \data_out[2] .register_cascade_mode = "off";
defparam \data_out[2] .sum_lutc_input = "datac";
defparam \data_out[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N0
maxii_lcell \data_regs[4][3] (
// Equation(s):
// \data_regs[4][3]~regout  = DFFEAS(GND, GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~3 , \DB[3]~3 , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\DB[3]~3 ),
	.datad(vcc),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~3 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[4][3]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[4][3] .lut_mask = "0000";
defparam \data_regs[4][3] .operation_mode = "normal";
defparam \data_regs[4][3] .output_mode = "reg_only";
defparam \data_regs[4][3] .register_cascade_mode = "off";
defparam \data_regs[4][3] .sum_lutc_input = "datac";
defparam \data_regs[4][3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y7_N2
maxii_lcell \data_regs[3][3] (
// Equation(s):
// \data_regs[3][3]~regout  = DFFEAS(GND, GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~7_combout , \DB[3]~3 , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\DB[3]~3 ),
	.datad(vcc),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~7_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[3][3]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[3][3] .lut_mask = "0000";
defparam \data_regs[3][3] .operation_mode = "normal";
defparam \data_regs[3][3] .output_mode = "reg_only";
defparam \data_regs[3][3] .register_cascade_mode = "off";
defparam \data_regs[3][3] .sum_lutc_input = "datac";
defparam \data_regs[3][3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y6_N5
maxii_lcell \data_regs[0][3] (
// Equation(s):
// \data_regs[0][3]~regout  = DFFEAS(GND, GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~6_combout , \DB[3]~3 , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\DB[3]~3 ),
	.datad(vcc),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[0][3]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[0][3] .lut_mask = "0000";
defparam \data_regs[0][3] .operation_mode = "normal";
defparam \data_regs[0][3] .output_mode = "reg_only";
defparam \data_regs[0][3] .register_cascade_mode = "off";
defparam \data_regs[0][3] .sum_lutc_input = "datac";
defparam \data_regs[0][3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y5_N1
maxii_lcell \data_regs[2][3] (
// Equation(s):
// \Mux4~0  = (address_latch[0] & (((address_latch[1])))) # (!address_latch[0] & ((address_latch[1] & ((data_regs[2][3]))) # (!address_latch[1] & (\data_regs[0][3]~regout ))))

	.clk(\clk~combout ),
	.dataa(address_latch[0]),
	.datab(\data_regs[0][3]~regout ),
	.datac(\DB[3]~3 ),
	.datad(address_latch[1]),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~4_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux4~0 ),
	.regout(\data_regs[2][3]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[2][3] .lut_mask = "fa44";
defparam \data_regs[2][3] .operation_mode = "normal";
defparam \data_regs[2][3] .output_mode = "comb_only";
defparam \data_regs[2][3] .register_cascade_mode = "off";
defparam \data_regs[2][3] .sum_lutc_input = "qfbk";
defparam \data_regs[2][3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y5_N5
maxii_lcell \data_regs[1][3] (
// Equation(s):
// \Mux4~1  = (address_latch[0] & ((\Mux4~0  & (\data_regs[3][3]~regout )) # (!\Mux4~0  & ((data_regs[1][3]))))) # (!address_latch[0] & (((\Mux4~0 ))))

	.clk(\clk~combout ),
	.dataa(address_latch[0]),
	.datab(\data_regs[3][3]~regout ),
	.datac(\DB[3]~3 ),
	.datad(\Mux4~0 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~5 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux4~1 ),
	.regout(\data_regs[1][3]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[1][3] .lut_mask = "dda0";
defparam \data_regs[1][3] .operation_mode = "normal";
defparam \data_regs[1][3] .output_mode = "comb_only";
defparam \data_regs[1][3] .register_cascade_mode = "off";
defparam \data_regs[1][3] .sum_lutc_input = "qfbk";
defparam \data_regs[1][3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y5_N6
maxii_lcell \data_out[3] (
// Equation(s):
// data_out[3] = DFFEAS((address_latch[2] & (((\data_regs[4][3]~regout )))) # (!address_latch[2] & (((\Mux4~1 )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(address_latch[2]),
	.datab(vcc),
	.datac(\data_regs[4][3]~regout ),
	.datad(\Mux4~1 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(data_out[3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_out[3] .lut_mask = "f5a0";
defparam \data_out[3] .operation_mode = "normal";
defparam \data_out[3] .output_mode = "reg_only";
defparam \data_out[3] .register_cascade_mode = "off";
defparam \data_out[3] .sum_lutc_input = "datac";
defparam \data_out[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N2
maxii_lcell \data_regs[4][4] (
// Equation(s):
// \data_regs[4][4]~regout  = DFFEAS(GND, GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~3 , \DB[4]~4 , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\DB[4]~4 ),
	.datad(vcc),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~3 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[4][4]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[4][4] .lut_mask = "0000";
defparam \data_regs[4][4] .operation_mode = "normal";
defparam \data_regs[4][4] .output_mode = "reg_only";
defparam \data_regs[4][4] .register_cascade_mode = "off";
defparam \data_regs[4][4] .sum_lutc_input = "datac";
defparam \data_regs[4][4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y7_N3
maxii_lcell \data_regs[3][4] (
// Equation(s):
// \data_regs[3][4]~regout  = DFFEAS((((\DB[4]~4 ))), GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~7_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\DB[4]~4 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Decoder0~7_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[3][4]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[3][4] .lut_mask = "ff00";
defparam \data_regs[3][4] .operation_mode = "normal";
defparam \data_regs[3][4] .output_mode = "reg_only";
defparam \data_regs[3][4] .register_cascade_mode = "off";
defparam \data_regs[3][4] .sum_lutc_input = "datac";
defparam \data_regs[3][4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y6_N0
maxii_lcell \data_regs[0][4] (
// Equation(s):
// \data_regs[0][4]~regout  = DFFEAS((((\DB[4]~4 ))), GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~6_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\DB[4]~4 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Decoder0~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[0][4]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[0][4] .lut_mask = "ff00";
defparam \data_regs[0][4] .operation_mode = "normal";
defparam \data_regs[0][4] .output_mode = "reg_only";
defparam \data_regs[0][4] .register_cascade_mode = "off";
defparam \data_regs[0][4] .sum_lutc_input = "datac";
defparam \data_regs[0][4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N9
maxii_lcell \data_regs[1][4] (
// Equation(s):
// \Mux3~0  = (address_latch[1] & (((address_latch[0])))) # (!address_latch[1] & ((address_latch[0] & ((data_regs[1][4]))) # (!address_latch[0] & (\data_regs[0][4]~regout ))))

	.clk(\clk~combout ),
	.dataa(\data_regs[0][4]~regout ),
	.datab(address_latch[1]),
	.datac(\DB[4]~4 ),
	.datad(address_latch[0]),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~5 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux3~0 ),
	.regout(\data_regs[1][4]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[1][4] .lut_mask = "fc22";
defparam \data_regs[1][4] .operation_mode = "normal";
defparam \data_regs[1][4] .output_mode = "comb_only";
defparam \data_regs[1][4] .register_cascade_mode = "off";
defparam \data_regs[1][4] .sum_lutc_input = "qfbk";
defparam \data_regs[1][4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X10_Y6_N7
maxii_lcell \data_regs[2][4] (
// Equation(s):
// \Mux3~1  = (address_latch[1] & ((\Mux3~0  & (\data_regs[3][4]~regout )) # (!\Mux3~0  & ((data_regs[2][4]))))) # (!address_latch[1] & (((\Mux3~0 ))))

	.clk(\clk~combout ),
	.dataa(address_latch[1]),
	.datab(\data_regs[3][4]~regout ),
	.datac(\DB[4]~4 ),
	.datad(\Mux3~0 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~4_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux3~1 ),
	.regout(\data_regs[2][4]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[2][4] .lut_mask = "dda0";
defparam \data_regs[2][4] .operation_mode = "normal";
defparam \data_regs[2][4] .output_mode = "comb_only";
defparam \data_regs[2][4] .register_cascade_mode = "off";
defparam \data_regs[2][4] .sum_lutc_input = "qfbk";
defparam \data_regs[2][4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y6_N5
maxii_lcell \data_out[4] (
// Equation(s):
// data_out[4] = DFFEAS((address_latch[2] & (\data_regs[4][4]~regout )) # (!address_latch[2] & (((\Mux3~1 )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\data_regs[4][4]~regout ),
	.datab(address_latch[2]),
	.datac(vcc),
	.datad(\Mux3~1 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(data_out[4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_out[4] .lut_mask = "bb88";
defparam \data_out[4] .operation_mode = "normal";
defparam \data_out[4] .output_mode = "reg_only";
defparam \data_out[4] .register_cascade_mode = "off";
defparam \data_out[4] .sum_lutc_input = "datac";
defparam \data_out[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N3
maxii_lcell \data_regs[4][5] (
// Equation(s):
// \data_regs[4][5]~regout  = DFFEAS((((\DB[5]~5 ))), GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~3 , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\DB[5]~5 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Decoder0~3 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[4][5]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[4][5] .lut_mask = "ff00";
defparam \data_regs[4][5] .operation_mode = "normal";
defparam \data_regs[4][5] .output_mode = "reg_only";
defparam \data_regs[4][5] .register_cascade_mode = "off";
defparam \data_regs[4][5] .sum_lutc_input = "datac";
defparam \data_regs[4][5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y7_N0
maxii_lcell \data_regs[3][5] (
// Equation(s):
// \data_regs[3][5]~regout  = DFFEAS((((\DB[5]~5 ))), GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~7_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\DB[5]~5 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Decoder0~7_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[3][5]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[3][5] .lut_mask = "ff00";
defparam \data_regs[3][5] .operation_mode = "normal";
defparam \data_regs[3][5] .output_mode = "reg_only";
defparam \data_regs[3][5] .register_cascade_mode = "off";
defparam \data_regs[3][5] .sum_lutc_input = "datac";
defparam \data_regs[3][5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N6
maxii_lcell \data_regs[0][5] (
// Equation(s):
// \data_regs[0][5]~regout  = DFFEAS((((\DB[5]~5 ))), GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~6_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\DB[5]~5 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Decoder0~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[0][5]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[0][5] .lut_mask = "ff00";
defparam \data_regs[0][5] .operation_mode = "normal";
defparam \data_regs[0][5] .output_mode = "reg_only";
defparam \data_regs[0][5] .register_cascade_mode = "off";
defparam \data_regs[0][5] .sum_lutc_input = "datac";
defparam \data_regs[0][5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y5_N7
maxii_lcell \data_regs[2][5] (
// Equation(s):
// \Mux2~0  = (address_latch[0] & (((address_latch[1])))) # (!address_latch[0] & ((address_latch[1] & ((data_regs[2][5]))) # (!address_latch[1] & (\data_regs[0][5]~regout ))))

	.clk(\clk~combout ),
	.dataa(address_latch[0]),
	.datab(\data_regs[0][5]~regout ),
	.datac(\DB[5]~5 ),
	.datad(address_latch[1]),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~4_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux2~0 ),
	.regout(\data_regs[2][5]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[2][5] .lut_mask = "fa44";
defparam \data_regs[2][5] .operation_mode = "normal";
defparam \data_regs[2][5] .output_mode = "comb_only";
defparam \data_regs[2][5] .register_cascade_mode = "off";
defparam \data_regs[2][5] .sum_lutc_input = "qfbk";
defparam \data_regs[2][5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y5_N3
maxii_lcell \data_regs[1][5] (
// Equation(s):
// \Mux2~1  = (address_latch[0] & ((\Mux2~0  & (\data_regs[3][5]~regout )) # (!\Mux2~0  & ((data_regs[1][5]))))) # (!address_latch[0] & (((\Mux2~0 ))))

	.clk(\clk~combout ),
	.dataa(\data_regs[3][5]~regout ),
	.datab(address_latch[0]),
	.datac(\DB[5]~5 ),
	.datad(\Mux2~0 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~5 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux2~1 ),
	.regout(\data_regs[1][5]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[1][5] .lut_mask = "bbc0";
defparam \data_regs[1][5] .operation_mode = "normal";
defparam \data_regs[1][5] .output_mode = "comb_only";
defparam \data_regs[1][5] .register_cascade_mode = "off";
defparam \data_regs[1][5] .sum_lutc_input = "qfbk";
defparam \data_regs[1][5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y5_N4
maxii_lcell \data_out[5] (
// Equation(s):
// data_out[5] = DFFEAS(((address_latch[2] & (\data_regs[4][5]~regout )) # (!address_latch[2] & ((\Mux2~1 )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\data_regs[4][5]~regout ),
	.datac(address_latch[2]),
	.datad(\Mux2~1 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(data_out[5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_out[5] .lut_mask = "cfc0";
defparam \data_out[5] .operation_mode = "normal";
defparam \data_out[5] .output_mode = "reg_only";
defparam \data_out[5] .register_cascade_mode = "off";
defparam \data_out[5] .sum_lutc_input = "datac";
defparam \data_out[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y7_N1
maxii_lcell \data_regs[3][6] (
// Equation(s):
// \data_regs[3][6]~regout  = DFFEAS(GND, GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~7_combout , \DB[6]~6 , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\DB[6]~6 ),
	.datad(vcc),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~7_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[3][6]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[3][6] .lut_mask = "0000";
defparam \data_regs[3][6] .operation_mode = "normal";
defparam \data_regs[3][6] .output_mode = "reg_only";
defparam \data_regs[3][6] .register_cascade_mode = "off";
defparam \data_regs[3][6] .sum_lutc_input = "datac";
defparam \data_regs[3][6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y6_N4
maxii_lcell \data_regs[0][6] (
// Equation(s):
// \data_regs[0][6]~regout  = DFFEAS((((\DB[6]~6 ))), GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~6_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\DB[6]~6 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Decoder0~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[0][6]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[0][6] .lut_mask = "ff00";
defparam \data_regs[0][6] .operation_mode = "normal";
defparam \data_regs[0][6] .output_mode = "reg_only";
defparam \data_regs[0][6] .register_cascade_mode = "off";
defparam \data_regs[0][6] .sum_lutc_input = "datac";
defparam \data_regs[0][6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N8
maxii_lcell \data_regs[1][6] (
// Equation(s):
// \Mux1~0  = (address_latch[1] & (((address_latch[0])))) # (!address_latch[1] & ((address_latch[0] & ((data_regs[1][6]))) # (!address_latch[0] & (\data_regs[0][6]~regout ))))

	.clk(\clk~combout ),
	.dataa(\data_regs[0][6]~regout ),
	.datab(address_latch[1]),
	.datac(\DB[6]~6 ),
	.datad(address_latch[0]),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~5 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux1~0 ),
	.regout(\data_regs[1][6]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[1][6] .lut_mask = "fc22";
defparam \data_regs[1][6] .operation_mode = "normal";
defparam \data_regs[1][6] .output_mode = "comb_only";
defparam \data_regs[1][6] .register_cascade_mode = "off";
defparam \data_regs[1][6] .sum_lutc_input = "qfbk";
defparam \data_regs[1][6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X10_Y6_N0
maxii_lcell \data_regs[2][6] (
// Equation(s):
// \Mux1~1  = (address_latch[1] & ((\Mux1~0  & (\data_regs[3][6]~regout )) # (!\Mux1~0  & ((data_regs[2][6]))))) # (!address_latch[1] & (((\Mux1~0 ))))

	.clk(\clk~combout ),
	.dataa(address_latch[1]),
	.datab(\data_regs[3][6]~regout ),
	.datac(\DB[6]~6 ),
	.datad(\Mux1~0 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~4_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux1~1 ),
	.regout(\data_regs[2][6]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[2][6] .lut_mask = "dda0";
defparam \data_regs[2][6] .operation_mode = "normal";
defparam \data_regs[2][6] .output_mode = "comb_only";
defparam \data_regs[2][6] .register_cascade_mode = "off";
defparam \data_regs[2][6] .sum_lutc_input = "qfbk";
defparam \data_regs[2][6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y6_N7
maxii_lcell \data_regs[4][6] (
// Equation(s):
// \data_regs[4][6]~regout  = DFFEAS((((\DB[6]~6 ))), GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~3 , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\DB[6]~6 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Decoder0~3 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[4][6]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[4][6] .lut_mask = "ff00";
defparam \data_regs[4][6] .operation_mode = "normal";
defparam \data_regs[4][6] .output_mode = "reg_only";
defparam \data_regs[4][6] .register_cascade_mode = "off";
defparam \data_regs[4][6] .sum_lutc_input = "datac";
defparam \data_regs[4][6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y6_N7
maxii_lcell \data_out[6] (
// Equation(s):
// data_out[6] = DFFEAS(((address_latch[2] & ((\data_regs[4][6]~regout ))) # (!address_latch[2] & (\Mux1~1 ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(address_latch[2]),
	.datac(\Mux1~1 ),
	.datad(\data_regs[4][6]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(data_out[6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_out[6] .lut_mask = "fc30";
defparam \data_out[6] .operation_mode = "normal";
defparam \data_out[6] .output_mode = "reg_only";
defparam \data_out[6] .register_cascade_mode = "off";
defparam \data_out[6] .sum_lutc_input = "datac";
defparam \data_out[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N9
maxii_lcell \data_regs[4][7] (
// Equation(s):
// \data_regs[4][7]~regout  = DFFEAS(GND, GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~3 , \DB[7]~7 , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\DB[7]~7 ),
	.datad(vcc),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~3 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[4][7]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[4][7] .lut_mask = "0000";
defparam \data_regs[4][7] .operation_mode = "normal";
defparam \data_regs[4][7] .output_mode = "reg_only";
defparam \data_regs[4][7] .register_cascade_mode = "off";
defparam \data_regs[4][7] .sum_lutc_input = "datac";
defparam \data_regs[4][7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y7_N5
maxii_lcell \data_regs[3][7] (
// Equation(s):
// \data_regs[3][7]~regout  = DFFEAS((((\DB[7]~7 ))), GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~7_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\DB[7]~7 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Decoder0~7_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[3][7]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[3][7] .lut_mask = "ff00";
defparam \data_regs[3][7] .operation_mode = "normal";
defparam \data_regs[3][7] .output_mode = "reg_only";
defparam \data_regs[3][7] .register_cascade_mode = "off";
defparam \data_regs[3][7] .sum_lutc_input = "datac";
defparam \data_regs[3][7] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y5_N0
maxii_lcell \data_regs[0][7] (
// Equation(s):
// \data_regs[0][7]~regout  = DFFEAS(GND, GLOBAL(\clk~combout ), GLOBAL(\rst_n~combout ), , \Decoder0~6_combout , \DB[7]~7 , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\DB[7]~7 ),
	.datad(vcc),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\data_regs[0][7]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[0][7] .lut_mask = "0000";
defparam \data_regs[0][7] .operation_mode = "normal";
defparam \data_regs[0][7] .output_mode = "reg_only";
defparam \data_regs[0][7] .register_cascade_mode = "off";
defparam \data_regs[0][7] .sum_lutc_input = "datac";
defparam \data_regs[0][7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y5_N4
maxii_lcell \data_regs[2][7] (
// Equation(s):
// \Mux0~0  = (address_latch[0] & (((address_latch[1])))) # (!address_latch[0] & ((address_latch[1] & ((data_regs[2][7]))) # (!address_latch[1] & (\data_regs[0][7]~regout ))))

	.clk(\clk~combout ),
	.dataa(address_latch[0]),
	.datab(\data_regs[0][7]~regout ),
	.datac(\DB[7]~7 ),
	.datad(address_latch[1]),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~4_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~0 ),
	.regout(\data_regs[2][7]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[2][7] .lut_mask = "fa44";
defparam \data_regs[2][7] .operation_mode = "normal";
defparam \data_regs[2][7] .output_mode = "comb_only";
defparam \data_regs[2][7] .register_cascade_mode = "off";
defparam \data_regs[2][7] .sum_lutc_input = "qfbk";
defparam \data_regs[2][7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y5_N7
maxii_lcell \data_regs[1][7] (
// Equation(s):
// \Mux0~1  = (address_latch[0] & ((\Mux0~0  & (\data_regs[3][7]~regout )) # (!\Mux0~0  & ((data_regs[1][7]))))) # (!address_latch[0] & (((\Mux0~0 ))))

	.clk(\clk~combout ),
	.dataa(address_latch[0]),
	.datab(\data_regs[3][7]~regout ),
	.datac(\DB[7]~7 ),
	.datad(\Mux0~0 ),
	.aclr(!\rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\Decoder0~5 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~1 ),
	.regout(\data_regs[1][7]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_regs[1][7] .lut_mask = "dda0";
defparam \data_regs[1][7] .operation_mode = "normal";
defparam \data_regs[1][7] .output_mode = "comb_only";
defparam \data_regs[1][7] .register_cascade_mode = "off";
defparam \data_regs[1][7] .sum_lutc_input = "qfbk";
defparam \data_regs[1][7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y5_N8
maxii_lcell \data_out[7] (
// Equation(s):
// data_out[7] = DFFEAS(((address_latch[2] & (\data_regs[4][7]~regout )) # (!address_latch[2] & ((\Mux0~1 )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\data_regs[4][7]~regout ),
	.datac(address_latch[2]),
	.datad(\Mux0~1 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(data_out[7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \data_out[7] .lut_mask = "cfc0";
defparam \data_out[7] .operation_mode = "normal";
defparam \data_out[7] .output_mode = "reg_only";
defparam \data_out[7] .register_cascade_mode = "off";
defparam \data_out[7] .sum_lutc_input = "datac";
defparam \data_out[7] .synch_mode = "off";
// synopsys translate_on

endmodule
