module AD7606_0(
    input  wire        clk,
    input  wire        reset,
    input  wire        start,
    input  wire        done,
    input  wire        enable,
    input  wire        channel,
    input  wire [15:0] data,
    output wire        busy,
    output wire        error,
    output wire [15:0] result
);

    wire [15:0] data_reg;
    wire [15:0] result_reg;
    wire        busy_reg;
    wire        error_reg;
    wire        start_reg;
    wire        done_reg;
    wire        enable_reg;
    wire        channel_reg;

    assign busy = busy_reg;
    assign error = error_reg;
    assign result = result_reg;

    always @(posedge clk or posedge reset) begin
        if (reset) begin
            data_reg <= 16'h0000;
            result_reg <= 16'h0000;
            busy_reg <= 1'b0;
            error_reg <= 1'b0;
            start_reg <= 1'b0;
            done_reg <= 1'b0;
            enable_reg <= 1'b0;
            channel_reg <= 1'b0;
        end else begin
            data_reg <= data;
            result_reg <= result_reg;
            busy_reg <= busy_reg;
            error_reg <= error_reg;
            start_reg <= start;
            done_reg <= done;
            enable_reg <= enable;
            channel_reg <= channel;
        end
    end

endmodule